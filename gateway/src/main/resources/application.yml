server:
  port: 8480

spring:
  application:
    name: gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  # Habilita la detección automática de servicios en Eureka
          lower-case-service-id: true  # Usa nombres en minúsculas para los servicios

      routes:
        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/api/v1/payment/**
          filters:
            - name: CircuitBreaker
              args:
                name: paymentCircuitBreaker
                fallbackUri: forward:/fallback/payment
            #- name: CorrelationIdFilter
            - name: CorrelationId

        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/v1/product/**
          filters:
            - name: CircuitBreaker
              args:
                name: productCircuitBreaker
                fallbackUri: forward:/fallback/product
            #- name: CorrelationIdFilter
            - name: RedisCaching
              args:
                ttlMinutes: 5
            - name: CorrelationId

        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/v1/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: orderCircuitBreaker
                fallbackUri: forward:/fallback/order
            #- name: CorrelationIdFilter
            - name: CorrelationId

        - id: inventory-service
          uri: lb://inventory-service
          predicates:
            - Path=/api/v1/inventory/**
          filters:
            - name: CircuitBreaker
              args:
                name: inventoryCircuitBreaker
                fallbackUri: forward:/fallback/inventory
            #- name: CorrelationIdFilter
            - name: CorrelationId
  data:
    redis:
      host: redis-cache
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://keycloak:8080/realms/master

resilience4j:
  circuitbreaker:
    instances:
      productCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 5
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 2

      orderCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 5
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 2

      paymentCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 5
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 2

      inventoryCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 5
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 2

eureka:
  client:
    service-url:
      defaultZone: http://discovery-server:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

management:
  endpoint:
    prometheus:
      access: unrestricted
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,threaddump,logfile,traces
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
  loki: # Dirección de tu instancia de Grafana Loki
      url: http://loki:3100/loki/api/v1/push


keycloak:
  token-uri: /realms/master/protocol/openid-connect/token
  auth-server-url: http://keycloak:8080
#  auth-server-url: http://localhost:8081
  realm: master
  username: admin
  password: admin
  client-id: my-client
  client-secret: 9pjyto2U3sMFz7Hh6Ev1JYCO8Uwf4GPx
